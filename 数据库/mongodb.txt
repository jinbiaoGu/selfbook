### 安装mongdb
1. 去官网下载安装软件包
    https://www.mongodb.com/download-center#community
1. 解压到对应的目录中
    curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.6.tgz    # 下载
    tar -zxvf mongodb-linux-x86_64-3.0.6.tgz                                   # 解压
    mv  mongodb-linux-x86_64-3.0.6/ /usr/local/mongodb                         # 将解压包拷贝到指定目录
1. 创建数据库文件夹，并赋予权限
    ```
    mkdir /data/db
    chown -R dabai /data/db
    ```
1. 将 mongodb的文件夹加入到系统文件路径中
    ```
    sudo vim /etc/profile
    export PATH=<mongodb-install-directory>/bin:$PATH
    <mongodb-install-directory> 为你 MongoDB 的安装路径。如本文的 /usr/local/mongodb 。
    
1.新增vim /etc/mongodb.conf，通过配置文件启动 
以下为基本配置
#数据库数据存放目录
dbpath=/data/db #/usr/local/mongodb/data
#数据库日志存放目录
logpath=/usr/local/mongodb/logs/mongodb.log
#以追加的方式记录日志
logappend = true
#端口号 默认为27017
port=27017
#以后台方式运行进程
fork=true
#开启用户认证
auth=true
#关闭http接口，默认关闭http端口访问
#nohttpinterface=true
#mongodb所绑定的ip地址
#bind_ip = 127.0.0.1
#启用日志文件，默认启用
journal=true
#这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false
quiet=true 

mongodb服务后台启动设置：
mongod -f /etc/mongodb.conf
 
1. 启动服务器：`mongod --fork`
1. 查看可以使用的参数:`mongod -h`
//mongod -f /etc/mongodb.conf

#错误基本处理
./mongod  -dbpath /usr/local/mongodb/data
报错：

./mongod: /usr/lib/x86_64-linux-gnu/libcurl.so.4: version `CURL_OPENSSL_3' not found (required by ./mongod)


版本不匹配，安装libcurl3解决：

sudo apt-get install libcurl3
 


报错：
about to fork child process, waiting until server is ready for connections.
forked process: 2340
ERROR: child process failed, exited with error number 1


cd data
删除mongo.lock文件
rm mongod.lock
mongod --repair --dbpath=/usr/local/mongodb/data
完成修复后就可以启动mongodb的客户端了！
意：这里可能会出现好几种报错：
number 100 ——一般是因为锁了
number 1 ——一般是文件没配置好，查看是mongodb下是否有log目录
number 48 —— 一般跟日志文件有关

—— 1、ERROR: child process failed, exited with error number 100
To see additional information in this output, start without the “–fork” option.
ongod --config /usr/local/mongodb/etc/mongod.conf

出错原因：mongodb 服务在不正常关闭的情况下,mongod 被锁.
解决办法：
1、删除 mongod.lock 文件和日志文件 mongodb.log
2、cd /usr/local/mongodb/bin
#find / -name mongod.lock
]# find / -name mongodb.log
/var/lib/mongo/mongod.lock
/usr/local/mongodb/log/mongodb.log
]# rm /var/lib/mongo/mongod.lock
#rm /usr/local/mongodb/data/db/mongod.lock
]# rm /usr/local/mongodb/log/mongodb.log
]# mongod -f /usr/local/mongodb/etc/mongodb.conf --repair 以修复方式启动mongodb
]# mongod -f /usr/local/mongodb/etc/mongodb.conf
about to fork child process, waiting until server is ready for connections.
forked process: 4395
child process started successfully, parent exiting (成功！)
]# ps -C mongod 查看进程
4395 ? 00:00:01 mongod
]# netstat -antulp | grep :27017 查看端口号
]# mongo 连接mongodb 服务

——2、ERROR: child process failed, exited with error number 1
—3、ERROR: child process failed, exited with error number 48ex
]#mongod --dbpath=/usr/local/mongodb/data/db --logpath=/usr/local/mongodb/log/mongodb.log --repair
以修复模式运行，可以查出具体原因
或者 cat /usr/local/mongodb/log/mongodb.log 查看原因
】#mongod --dbpath=/usr/local/mongodb/data/db --logpath=/usr/local/mongodb/log/mongodb.log --fork
child process started successfully, parent exiting

注意：warning：千万不能使用kill -9 ,因为MongoDB使用mmap方式进行数据文件管理，也就是说写操作基本是在内存中进行，写操作会被每隔60秒(syncdelay设定)的flush到磁盘里。如果在这60秒内flush处于停止事情我们进行kill -9那么从上次flush之后的写入数据将会全部丢失。
如果在flush操作进行时执行kill -9则会造成文件混乱，可能导致数据全丢了，启动时加了repair也无法恢复。

——4、 Error parsing YAML config file: yaml-cpp: error at line 3, column 68: illegal map value
原因：配置文件/etc/mongod.conf格式的错误。
（mongodb 3.0之后配置文件采用YAML格式，这种格式非常简单，使用:表示，开头使用“空格”作为缩进。需要注意的是，“:”之后有value的话，需要紧跟一个空格，如果key只是表示层级，则无需在“:”后增加空格（比如：systemLog:后面既不需要空格）。按照层级，每行4个空格缩进，第二级则8个空格，依次轮推，顶层则不需要空格缩进。如果格式不正确，将会出现上面的错误）
解决办法：我也不太清楚具体出错的原因，只能 把/usr/local/mongodb/etc/mongod.conf配置文件内容重写一遍，
然后就没出错了，有点瞎猫的意思，等下次出现我再找找原因。
++++注意：/etc/mongod.conf 是配置运行参数文件
/usr/local/mongodb/etc/mongdb.conf 是 mongdb 启动的配置文件

### 配置mongodb 
1. 使用mongodb 命令进入到数据库
2. 添加管理员用户
    ```sql
    use admin
    db.createUser({user:"admin",pwd:"password",roles:["root"]})
    --查看添加结果
    db.system.users.find()
    ```
3. 修改mongo.cnf 文件强制用户必须登录
4. 登录后验证admin用户并添加新用户
    ```sql
    use admin
    db.auth("admin", "password")
    use testdb1
    db.createUser({user: "testdb1u1", pwd: "xyz123", roles: [{ role: "dbOwner", db: "testdb1" }]})
    ```
5. 数据导出
    ```
      mongodump  -h192.168.0.39 -uwekan -pmayuehehe123 -dwekan -o ./wekan
    ```
6. 数据导入
    ```shell
    mongorestore -h 192.168.4.187 -d wekan wekan/wekan
    ```